#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.7
# from Racc grammer file "".
#

require 'racc/parser.rb'
module CSSPool
  module CSS
    class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 312)

def numeric thing
  thing = thing.gsub(/[^\d.]/, '')
  Integer(thing) rescue Float(thing)
end

def interpret_identifier s
  interpret_escapes s
end

def interpret_uri s
  interpret_escapes s.match(/^url\((.*)\)$/mu)[1].strip.match(/^(['"]?)((?:\\.|.)*)\1$/mu)[2]
end

def interpret_string s
  interpret_escapes s.match(/^(['"])((?:\\.|.)*)\1$/mu)[2]
end

def interpret_escapes s
  token_exp = /\\([0-9a-fA-F]{1,6}(?:\r\n|\s)?)|\\(.)|(.)/mu
  characters = s.scan(token_exp).map do |u_escape, i_escape, ident|
    if u_escape
      code = u_escape.chomp.to_i 16
      code = 0xFFFD if code > 0x10FFFF
      [code].pack('U')
    elsif i_escape
      if i_escape == "\n"
        ''
      else
        i_escape
      end
    else
      ident
    end
  end.join ''
end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     8,     9,    82,    48,    21,    15,    53,    45,     3,    22,
    27,    29,     8,     9,    81,    36,    21,    15,    48,    54,
    55,    22,    27,    29,    72,    63,     8,     9,    70,    71,
    21,    15,    13,    28,    30,    22,    27,    29,    64,    27,
    29,    84,    21,    37,    13,    28,    30,    22,    27,    29,
    21,    15,   112,    69,   113,    22,    27,    29,    13,    28,
    30,    21,    28,    30,    65,    62,    22,    27,    29,    21,
    15,    28,    30,    61,    22,    27,    29,    21,    15,    28,
    30,   116,    22,    27,    29,    27,    29,    21,    15,   118,
    28,    30,    22,    27,    29,    74,    51,    13,    28,    30,
    27,    29,    67,    42,    68,    13,    28,    30,    28,    30,
    97,    42,   109,    86,    43,    13,    28,    30,    95,    27,
    29,    27,    29,    28,    30,    94,   111,   108,   110,    99,
   107,   101,   100,   102,   103,   104,   105,   106,    96,    97,
   125,   109,    28,    30,    28,    30,   126,    95,    80,    77,
    78,    79,    83,   127,    94,    70,   108,   128,    99,   107,
   101,   100,   102,   103,   104,   105,   106,    96,    97,   115,
   109,   114,   129,    50,    34,   132,    95,   133,   134,   135,
   136,   137,   138,    94,   118,   108,    31,    99,   107,   101,
   100,   102,   103,   104,   105,   106,    96,    97,   141,   109,
   142,   nil,   nil,   nil,   nil,    95,   nil,   nil,   nil,   nil,
   nil,   nil,    94,   nil,   108,   nil,    99,   107,   101,   100,
   102,   103,   104,   105,   106,    96,    97,   nil,   109,   nil,
   120,   nil,   nil,   nil,    95,   nil,   nil,   122,   nil,   nil,
   nil,    94,   nil,   108,   121,    99,   107,   101,   100,   102,
   103,   104,   105,   106,    96,   108,   nil,    99,   107,   101,
   100,   102,   103,   104,   105,   106 ]

racc_action_check = [
     6,     6,    64,    14,     6,     6,    18,    14,     1,     6,
     6,     6,     2,     2,    64,     9,     2,     2,    46,    18,
    18,     2,     2,     2,    44,    30,     5,     5,    41,    41,
     5,     5,     6,     6,     6,     5,     5,     5,    30,    26,
    26,    70,    52,     9,     2,     2,     2,    52,    52,    52,
    15,    15,    78,    40,    78,    15,    15,    15,     5,     5,
     5,    51,    26,    26,    34,    29,    51,    51,    51,    11,
    11,    52,    52,    28,    11,    11,    11,    10,    10,    15,
    15,    82,    10,    10,    10,    25,    25,    12,    12,    85,
    51,    51,    12,    12,    12,    47,    17,    11,    11,    11,
    23,    23,    35,    35,    35,    10,    10,    10,    25,    25,
    74,    13,    74,    74,    13,    12,    12,    12,    74,    24,
    24,    19,    19,    23,    23,    74,    77,    74,    77,    74,
    74,    74,    74,    74,    74,    74,    74,    74,    74,    86,
    88,    86,    24,    24,    19,    19,    90,    86,    62,    62,
    62,    62,    66,    91,    86,    66,    86,    92,    86,    86,
    86,    86,    86,    86,    86,    86,    86,    86,   123,    79,
   123,    79,    93,    16,     8,   110,   123,   111,   112,   113,
   114,   115,   117,   123,   119,   123,     3,   123,   123,   123,
   123,   123,   123,   123,   123,   123,   123,    94,   130,    94,
   139,   nil,   nil,   nil,   nil,    94,   nil,   nil,   nil,   nil,
   nil,   nil,    94,   nil,    94,   nil,    94,    94,    94,    94,
    94,    94,    94,    94,    94,    94,    87,   nil,    87,   nil,
    87,   nil,   nil,   nil,    87,   nil,   nil,    87,   nil,   nil,
   nil,    87,   nil,    87,    87,    87,    87,    87,    87,    87,
    87,    87,    87,    87,    87,    98,   nil,    98,    98,    98,
    98,    98,    98,    98,    98,    98 ]

racc_action_pointer = [
   nil,     8,    10,   186,   nil,    24,    -2,   nil,   170,    11,
    71,    63,    81,   105,    -3,    44,   164,    88,    -1,   109,
   nil,   nil,   nil,    88,   107,    73,    27,   nil,    67,    59,
    19,   nil,   nil,   nil,    59,    97,   nil,   nil,   nil,   nil,
    43,    20,   nil,   nil,    14,   nil,    12,    59,   nil,   nil,
   nil,    55,    36,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   134,   nil,    -4,   nil,   147,   nil,   nil,   nil,
    35,   nil,   nil,   nil,   106,   nil,   nil,   122,    48,   165,
   nil,   nil,    63,   nil,   nil,    56,   135,   222,   133,   nil,
   139,   146,   150,   165,   193,   nil,   nil,   nil,   234,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   161,   163,   164,   165,   166,   167,   nil,   177,   nil,   151,
   nil,   nil,   nil,   164,   nil,   nil,   nil,   nil,   nil,   nil,
   180,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   195,
   nil,   nil,   nil ]

racc_action_default = [
    -1,   -99,   -99,   -99,    -2,    -5,    -6,    -7,   -99,   -99,
   -18,   -19,   -99,   -99,   -99,   -99,   -99,   -28,   -30,   -35,
   -36,   -37,   -38,   -39,   -40,   -41,   -42,   -47,   -99,   -99,
   -99,   143,    -3,    -4,   -99,   -99,   -12,   -13,   -16,   -17,
   -99,   -99,   -15,   -22,   -99,   -24,   -60,   -99,   -65,   -25,
   -26,   -99,   -99,   -31,   -32,   -33,   -34,   -43,   -44,   -45,
   -46,   -48,   -99,   -56,   -99,    -8,   -99,   -10,   -11,   -20,
   -99,   -21,   -23,   -59,   -99,   -27,   -29,   -99,   -99,   -99,
   -55,   -57,   -99,    -9,   -14,   -64,   -99,   -71,   -72,   -73,
   -74,   -75,   -76,   -77,   -99,   -81,   -83,   -85,   -99,   -87,
   -88,   -89,   -90,   -91,   -92,   -93,   -94,   -95,   -96,   -98,
   -99,   -99,   -99,   -99,   -99,   -99,   -58,   -99,   -63,   -64,
   -66,   -67,   -68,   -99,   -70,   -97,   -84,   -82,   -80,   -78,
   -99,   -86,   -49,   -50,   -51,   -52,   -53,   -54,   -61,   -99,
   -69,   -79,   -62 ]

racc_goto_table = [
    85,   117,    44,    41,    56,    38,    39,    40,    57,    58,
    59,    60,   119,   124,     4,    75,    49,    32,    33,    76,
   130,    52,    35,     2,     1,    66,   123,   131,   nil,   nil,
   nil,   nil,   nil,   nil,    73,   139,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   140 ]

racc_goto_check = [
    26,    27,    13,     8,    19,     6,     6,     6,    19,    19,
    19,    19,    26,    26,     2,    14,    12,     2,     2,    15,
    26,    17,     7,     3,     1,     8,    28,    31,   nil,   nil,
   nil,   nil,   nil,   nil,    13,    27,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    26 ]

racc_goto_pointer = [
   nil,    24,    12,    23,   nil,   nil,    -5,    13,   -10,   nil,
   nil,   nil,     1,   -12,   -36,   -33,   nil,     3,   nil,   -15,
   nil,   nil,   nil,   nil,   nil,   nil,   -74,   -84,   -61,   nil,
   nil,   -71,   nil,   nil,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     5,     6,     7,   nil,   nil,    10,
    11,    12,    14,   nil,    16,    17,    18,   nil,    19,    20,
    23,    24,    25,    26,    46,    47,   nil,   nil,   nil,    87,
    88,    89,    90,    91,    92,    93,    98 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 40, :_reduce_1,
  2, 38, :_reduce_2,
  2, 39, :_reduce_none,
  2, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  3, 41, :_reduce_8,
  4, 42, :_reduce_9,
  3, 42, :_reduce_10,
  2, 44, :_reduce_none,
  1, 44, :_reduce_12,
  1, 44, :_reduce_13,
  3, 45, :_reduce_14,
  1, 45, :_reduce_15,
  2, 43, :_reduce_none,
  2, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  3, 47, :_reduce_20,
  3, 48, :_reduce_21,
  2, 48, :_reduce_22,
  3, 46, :_reduce_23,
  2, 46, :_reduce_24,
  2, 49, :_reduce_25,
  2, 49, :_reduce_26,
  3, 51, :_reduce_27,
  1, 51, :_reduce_28,
  3, 52, :_reduce_29,
  1, 52, :_reduce_none,
  1, 54, :_reduce_31,
  1, 54, :_reduce_32,
  1, 54, :_reduce_33,
  2, 53, :_reduce_34,
  1, 53, :_reduce_35,
  1, 53, :_reduce_36,
  1, 55, :_reduce_37,
  1, 55, :_reduce_38,
  1, 56, :_reduce_39,
  1, 56, :_reduce_40,
  1, 56, :_reduce_41,
  1, 56, :_reduce_42,
  2, 56, :_reduce_43,
  2, 56, :_reduce_44,
  2, 56, :_reduce_45,
  2, 56, :_reduce_46,
  1, 57, :_reduce_47,
  2, 58, :_reduce_48,
  5, 59, :_reduce_49,
  5, 59, :_reduce_50,
  5, 59, :_reduce_51,
  5, 59, :_reduce_52,
  5, 59, :_reduce_53,
  5, 59, :_reduce_54,
  3, 59, :_reduce_55,
  2, 60, :_reduce_56,
  3, 60, :_reduce_57,
  4, 60, :_reduce_58,
  2, 50, :_reduce_none,
  1, 50, :_reduce_none,
  5, 61, :_reduce_61,
  6, 61, :_reduce_62,
  1, 64, :_reduce_63,
  0, 64, :_reduce_64,
  1, 62, :_reduce_65,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  3, 63, :_reduce_69,
  2, 63, :_reduce_70,
  1, 63, :_reduce_71,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  2, 72, :_reduce_78,
  3, 72, :_reduce_79,
  2, 71, :_reduce_80,
  1, 71, :_reduce_81,
  2, 70, :_reduce_82,
  1, 70, :_reduce_83,
  2, 69, :_reduce_84,
  1, 69, :_reduce_85,
  2, 68, :_reduce_86,
  1, 68, :_reduce_87,
  1, 68, :_reduce_88,
  1, 68, :_reduce_89,
  1, 68, :_reduce_90,
  1, 68, :_reduce_91,
  1, 68, :_reduce_92,
  1, 68, :_reduce_93,
  1, 68, :_reduce_94,
  1, 73, :_reduce_95,
  1, 73, :_reduce_96,
  2, 67, :_reduce_97,
  1, 67, :_reduce_98 ]

racc_reduce_n = 99

racc_shift_n = 143

racc_token_table = {
  false => 0,
  :error => 1,
  :CHARSET_SYM => 2,
  :IMPORT_SYM => 3,
  :STRING => 4,
  :SEMI => 5,
  :IDENT => 6,
  :S => 7,
  :COMMA => 8,
  :LBRACE => 9,
  :RBRACE => 10,
  :STAR => 11,
  :HASH => 12,
  :LSQUARE => 13,
  :RSQUARE => 14,
  :EQUAL => 15,
  :INCLUDES => 16,
  :DASHMATCH => 17,
  :RPAREN => 18,
  :FUNCTION => 19,
  :GREATER => 20,
  :PLUS => 21,
  :SLASH => 22,
  :NUMBER => 23,
  :MINUS => 24,
  :LENGTH => 25,
  :PERCENTAGE => 26,
  :EMS => 27,
  :EXS => 28,
  :ANGLE => 29,
  :TIME => 30,
  :FREQ => 31,
  :URI => 32,
  :IMPORTANT_SYM => 33,
  :MEDIA_SYM => 34,
  "." => 35,
  ":" => 36 }

racc_nt_base = 37

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "CHARSET_SYM",
  "IMPORT_SYM",
  "STRING",
  "SEMI",
  "IDENT",
  "S",
  "COMMA",
  "LBRACE",
  "RBRACE",
  "STAR",
  "HASH",
  "LSQUARE",
  "RSQUARE",
  "EQUAL",
  "INCLUDES",
  "DASHMATCH",
  "RPAREN",
  "FUNCTION",
  "GREATER",
  "PLUS",
  "SLASH",
  "NUMBER",
  "MINUS",
  "LENGTH",
  "PERCENTAGE",
  "EMS",
  "EXS",
  "ANGLE",
  "TIME",
  "FREQ",
  "URI",
  "IMPORTANT_SYM",
  "MEDIA_SYM",
  "\".\"",
  "\":\"",
  "$start",
  "document",
  "stylesheet",
  "@1",
  "charset",
  "import",
  "body",
  "import_location",
  "medium",
  "ruleset",
  "media",
  "start_media",
  "start_selector",
  "declarations",
  "selectors",
  "selector",
  "simple_selector",
  "combinator",
  "element_name",
  "hcap",
  "hash",
  "class",
  "attrib",
  "pseudo",
  "declaration",
  "property",
  "expr",
  "prio",
  "operator",
  "term",
  "ident",
  "numeric",
  "string",
  "uri",
  "hexcolor",
  "function",
  "unary_operator" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 9)
  def _reduce_1(val, _values, result)
     @handler.start_document 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 11)
  def _reduce_2(val, _values, result)
     @handler.end_document 
    result
  end
.,.,

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.y', 21)
  def _reduce_8(val, _values, result)
     @handler.charset interpret_string(val[1]), {} 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_9(val, _values, result)
            @handler.import_style [val[2]].flatten, val[1]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_10(val, _values, result)
            @handler.import_style [], val[1]
      
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_12(val, _values, result)
     result = Terms::String.new interpret_string val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 34)
  def _reduce_13(val, _values, result)
     result = Terms::URI.new interpret_uri val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_14(val, _values, result)
            result = [val.first, Terms::Ident.new(interpret_identifier val.last)]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_15(val, _values, result)
            result = Terms::Ident.new interpret_identifier val.first
      
    result
  end
.,.,

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_20(val, _values, result)
     @handler.end_media val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_21(val, _values, result)
            result = [val[1]].flatten
        @handler.start_media result
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_22(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_23(val, _values, result)
            @handler.end_selector val.first
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_24(val, _values, result)
            @handler.end_selector val.first
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 69)
  def _reduce_25(val, _values, result)
     result = val.last 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_26(val, _values, result)
            @handler.start_selector val.first
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 77)
  def _reduce_27(val, _values, result)
            # FIXME: should always garantee array
        sel = Selector.new(val.first, {})
        result = [sel, val[2]].flatten
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_28(val, _values, result)
            result = [Selector.new(val.first, {})]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 89)
  def _reduce_29(val, _values, result)
            val = val.flatten
        val[2].combinator = val.delete_at 1
        result = val
      
    result
  end
.,.,

# reduce 30 omitted

module_eval(<<'.,.,', 'parser.y', 96)
  def _reduce_31(val, _values, result)
     result = :s 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 97)
  def _reduce_32(val, _values, result)
     result = :> 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 98)
  def _reduce_33(val, _values, result)
     result = :+ 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 102)
  def _reduce_34(val, _values, result)
            selector = val.first
        selector.additional_selectors = val.last
        result = [selector]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 106)
  def _reduce_35(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 109)
  def _reduce_36(val, _values, result)
            ss = Selectors::Simple.new nil, nil
        ss.additional_selectors = val.flatten
        result = [ss]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 115)
  def _reduce_37(val, _values, result)
     result = Selectors::Type.new interpret_identifier val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 116)
  def _reduce_38(val, _values, result)
     result = Selectors::Universal.new val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 119)
  def _reduce_39(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 120)
  def _reduce_40(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 121)
  def _reduce_41(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 122)
  def _reduce_42(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 123)
  def _reduce_43(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 124)
  def _reduce_44(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 125)
  def _reduce_45(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 126)
  def _reduce_46(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 130)
  def _reduce_47(val, _values, result)
            result = Selectors::Id.new interpret_identifier val.first.sub(/^#/, '')
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 134)
  def _reduce_48(val, _values, result)
            result = Selectors::Class.new interpret_identifier val.last
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 139)
  def _reduce_49(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_identifier(val[3]),
          Selectors::Attribute::EQUALS
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 146)
  def _reduce_50(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_string(val[3]),
          Selectors::Attribute::EQUALS
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 153)
  def _reduce_51(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_string(val[3]),
          Selectors::Attribute::INCLUDES
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 160)
  def _reduce_52(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_identifier(val[3]),
          Selectors::Attribute::INCLUDES
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 167)
  def _reduce_53(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_identifier(val[3]),
          Selectors::Attribute::DASHMATCH
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 174)
  def _reduce_54(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_string(val[3]),
          Selectors::Attribute::DASHMATCH
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 181)
  def _reduce_55(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          nil,
          Selectors::Attribute::SET
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 190)
  def _reduce_56(val, _values, result)
            result = Selectors::PseudoClass.new(
          interpret_identifier(val[1])
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 195)
  def _reduce_57(val, _values, result)
            result = Selectors::PseudoClass.new(
          interpret_identifier(val[1].sub(/\($/, '')),
          ''
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 201)
  def _reduce_58(val, _values, result)
            result = Selectors::PseudoClass.new(
          interpret_identifier(val[1].sub(/\($/, '')),
          interpret_identifier(val[2])
        )
      
    result
  end
.,.,

# reduce 59 omitted

# reduce 60 omitted

module_eval(<<'.,.,', 'parser.y', 213)
  def _reduce_61(val, _values, result)
     @handler.property val.first, val[2], val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 215)
  def _reduce_62(val, _values, result)
     @handler.property val.first, val[3], val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 218)
  def _reduce_63(val, _values, result)
     result = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 219)
  def _reduce_64(val, _values, result)
     result = false 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 222)
  def _reduce_65(val, _values, result)
     result = interpret_identifier val[0] 
    result
  end
.,.,

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

module_eval(<<'.,.,', 'parser.y', 231)
  def _reduce_69(val, _values, result)
            result = [val.first, val.last].flatten
        val.last.first.operator = val[1]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 234)
  def _reduce_70(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 235)
  def _reduce_71(val, _values, result)
     result = val 
    result
  end
.,.,

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

module_eval(<<'.,.,', 'parser.y', 246)
  def _reduce_78(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 248)
  def _reduce_79(val, _values, result)
            name = interpret_identifier val.first.sub(/\($/, '')
        if name == 'rgb'
          result = Terms::Rgb.new(*val[1])
        else
          result = Terms::Function.new name, val[1]
        end
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 257)
  def _reduce_80(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 258)
  def _reduce_81(val, _values, result)
     result = Terms::Hash.new val.first.sub(/^#/, '') 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 261)
  def _reduce_82(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 262)
  def _reduce_83(val, _values, result)
     result = Terms::URI.new interpret_uri val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 264)
  def _reduce_84(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 265)
  def _reduce_85(val, _values, result)
     result = Terms::String.new interpret_string val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 269)
  def _reduce_86(val, _values, result)
            result = val[1]
        val[1].unary_operator = val.first
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 273)
  def _reduce_87(val, _values, result)
            result = Terms::Number.new numeric val.first
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 276)
  def _reduce_88(val, _values, result)
            result = Terms::Number.new numeric(val.first), nil, '%'
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 279)
  def _reduce_89(val, _values, result)
            unit    = val.first.gsub(/[\s\d.]/, '')
        result = Terms::Number.new numeric(val.first), nil, unit
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 283)
  def _reduce_90(val, _values, result)
            result = Terms::Number.new numeric(val.first), nil, 'em'
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 286)
  def _reduce_91(val, _values, result)
            result = Terms::Number.new numeric(val.first), nil, 'ex'
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 289)
  def _reduce_92(val, _values, result)
            unit    = val.first.gsub(/[\s\d.]/, '')
        result = Terms::Number.new numeric(val.first), nil, unit
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 293)
  def _reduce_93(val, _values, result)
            unit    = val.first.gsub(/[\s\d.]/, '')
        result = Terms::Number.new numeric(val.first), nil, unit
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 297)
  def _reduce_94(val, _values, result)
            unit    = val.first.gsub(/[\s\d.]/, '')
        result = Terms::Number.new numeric(val.first), nil, unit
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 302)
  def _reduce_95(val, _values, result)
     result = :minus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 303)
  def _reduce_96(val, _values, result)
     result = :plus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 306)
  def _reduce_97(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 307)
  def _reduce_98(val, _values, result)
     result = Terms::Ident.new interpret_identifier val.first 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

    end   # class Parser
    end   # module CSS
  end   # module CSSPool
